/*!
 * @scoby/analytics-ts v3.0.0
 * (c) Scoby UG
 * Released under the MIT License.
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("got"),require("build-url-ts"),require("crypto"),require("ip-matching")):"function"==typeof define&&define.amd?define(["exports","got","build-url-ts","crypto","ip-matching"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Scoby={},t.got,t.buildUrl,t.crypto,t.ipMatching)}(this,(function(t,e,r,i,n){"use strict";function o(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var s=o(e),a=o(r);function u(t,e,r,i){return new(r||(r=Promise))((function(n,o){function s(t){try{u(i.next(t))}catch(t){o(t)}}function a(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}u((i=i.apply(t,e||[])).next())}))}function c(t,e){var r,i,n,o,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,i&&(n=2&o[0]?i.return:o[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,o[1])).done)return n;switch(i=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,i=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(n=s.trys,(n=n.length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){s.label=o[1];break}if(6===o[0]&&s.label<n[1]){s.label=n[1],n=o;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(o);break}n[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],i=0}finally{r=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}var l=function(){function t(t,e){this.apiKey=t,this.salt=e,this.ipBlacklistPatterns=[],this.whitelistedUrlParameters=["utm_medium","utm_source","utm_campaign","utm_content","utm_term"],this.workspaceId=this.getWorkspaceId(),this.apiHost="https://".concat(this.workspaceId,".s3y.io")}return t.prototype.hash=function(t){return i.createHmac("sha256",this.salt).update(Buffer.from(t,"utf-8")).digest("hex")},t.prototype.getVisitorId=function(t){var e=t.visitorId,r=t.ipAddress,i=t.userAgent;return e?this.hash([e,this.workspaceId].join("|")):this.hash([r,i,this.workspaceId].join("|"))},t.prototype.getWorkspaceId=function(){var t=Buffer.from(this.apiKey,"base64").toString("ascii").split("|");return t.length,t[0]},t.prototype.getRequestedUrl=function(t){var e=this,r=new URL(t);return r.searchParams.forEach((function(t,i){e.whitelistedUrlParameters.includes(i)||r.searchParams.delete(i)})),r.toString()},t.prototype.getReferringUrl=function(t){var e=new URL(t);return"".concat(e.protocol,"//").concat(e.host)},t.prototype.addWhitelistedUrlParameter=function(t){this.whitelistedUrlParameters.push(t)},t.prototype.logPageView=function(t){return u(this,void 0,void 0,(function(){var e,r,i,n,o,u,l,p,f;return c(this,(function(c){switch(c.label){case 0:return e=t.userAgent,r=t.requestedUrl,i=t.referringUrl,n=t.ipAddress,o=t.visitorSegments,this.isBlockedIp(n)?[2,!1]:(u={vid:this.getVisitorId(t),ua:e,url:this.getRequestedUrl(r)},i&&(u.ref=this.getReferringUrl(i)),o&&(u.sg=o.join(",")),l=a.default(this.apiHost,{path:"/count",queryParams:u}),p={timeout:{send:5e3},headers:{Authorization:"Bearer ".concat(this.apiKey)}},[4,s.default(l,p).catch((function(t){throw new Error("failed to log page view"+t.message)}))]);case 1:if(204===(f=c.sent().statusCode))return[2,!0];throw new Error("failed to log page view. Status code: "+f)}}))}))},t.prototype.isBlockedIp=function(t){for(var e=0,r=this.ipBlacklistPatterns;e<r.length;e++){var i=r[e];if(n.matches(t,i))return!0}return!1},t.prototype.blacklistIpRange=function(t){this.ipBlacklistPatterns.push(t)},t}();t.Client=l,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=index.umd.min.js.map
