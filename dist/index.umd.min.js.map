{"version":3,"file":"index.umd.min.js","sources":["../src/index.ts"],"sourcesContent":["import got from 'got';\nimport buildUrl, { IQueryParams } from 'build-url-ts';\nimport { createHash } from 'crypto';\n\nexport interface PageView {\n  ipAddress: string;\n  userAgent: string;\n  requestedUrl: string;\n  visitorId?: string;\n  referringUrl?: string;\n}\n\nexport class Client {\n  private readonly apiHost: string;\n\n  constructor(private jarId: string) {\n    this.apiHost = `https://${this.jarId}.s3y.io`;\n  }\n\n  private hash(value: string): string {\n    return createHash('sha256').update(value).digest('hex');\n  }\n\n  private getVisitorId(pageView: PageView): string {\n    const { visitorId, ipAddress, userAgent } = pageView;\n    if (visitorId) {\n      return this.hash([visitorId, this.jarId].join('|'));\n    }\n\n    return this.hash([ipAddress, userAgent, this.jarId].join('|'));\n  }\n\n  public async logPageView(pageView: PageView): Promise<boolean> {\n    const { userAgent, requestedUrl, referringUrl } = pageView;\n\n    const queryParams: IQueryParams = {\n      vid: this.getVisitorId(pageView),\n      ua: userAgent,\n      url: requestedUrl,\n    };\n\n    if (referringUrl) {\n      queryParams['ref'] = referringUrl;\n    }\n\n    const url = buildUrl(this.apiHost, {\n      path: '/count',\n      queryParams,\n    });\n\n    const options = {\n      timeout: {\n        send: 5000,\n      },\n    };\n\n    const { statusCode } = await got(url, options).catch((error) => {\n      throw new Error('failed to log page view' + error.message);\n    });\n    if (statusCode === 204) {\n      return true;\n    }\n    throw new Error('failed to log page view. Status code: ' + statusCode);\n  }\n}\n"],"names":["Client","jarId","this","apiHost","concat","prototype","hash","value","createHash","update","digest","getVisitorId","pageView","visitorId","ipAddress","userAgent","join","logPageView","requestedUrl","referringUrl","queryParams","vid","ua","url","buildUrl","path","options","timeout","send","got","catch","error","Error","message","statusCode","_a","sent"],"mappings":";;;;;ywDAYA,IAAAA,EAAA,WAGE,SAAAA,EAAoBC,GAAAC,KAAKD,MAALA,EAClBC,KAAKC,QAAU,WAAAC,OAAWF,KAAKD,gBAChC,CA+CH,OA7CUD,EAAIK,UAAAC,KAAZ,SAAaC,GACX,OAAOC,EAAAA,WAAW,UAAUC,OAAOF,GAAOG,OAAO,QAG3CV,EAAYK,UAAAM,aAApB,SAAqBC,GACX,IAAAC,EAAoCD,EAAQC,UAAjCC,EAAyBF,EAAQE,UAAtBC,EAAcH,YAC5C,OAAIC,EACKX,KAAKI,KAAK,CAACO,EAAWX,KAAKD,OAAOe,KAAK,MAGzCd,KAAKI,KAAK,CAACQ,EAAWC,EAAWb,KAAKD,OAAOe,KAAK,OAG9ChB,EAAWK,UAAAY,YAAxB,SAAyBL,+GAwBA,OAvBfG,EAA0CH,EAAjCG,UAAEG,EAA+BN,EAAQM,aAAzBC,EAAiBP,eAE5CQ,EAA4B,CAChCC,IAAKnB,KAAKS,aAAaC,GACvBU,GAAIP,EACJQ,IAAKL,GAGHC,IACFC,EAAiB,IAAID,GAGjBI,EAAMC,EAAAA,QAAStB,KAAKC,QAAS,CACjCsB,KAAM,SACNL,YAAWA,IAGPM,EAAU,CACdC,QAAS,CACPC,KAAM,MAImB,CAAA,EAAAC,UAAIN,EAAKG,GAASI,OAAM,SAACC,GACpD,MAAM,IAAIC,MAAM,0BAA4BD,EAAME,QACnD,YACD,GAAmB,OAHXC,EAAeC,EAErBC,OAFgBF,YAIhB,MAAA,CAAA,GAAO,GAET,MAAM,IAAIF,MAAM,yCAA2CE,SAC5D,EACFlC,CAAD"}